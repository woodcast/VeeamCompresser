Написать программу на C#, предназначенную для сжатия и расжатия файлов с 

помощью System.IO.Compression.GzipStream.

Параметры программы, имена исходного и результирующего файлов задаются в 

командной строке следующим образом:

? для архивации: GZipTest.exe compress [имя исходного файла] [имя архива]

? для разархивации: GZipTest.exe decompress  [имя архива] [имя распакованного 

файла]

В случае успеха программа возвращает 0, при ошибке  1.

Программа должна эффективно распараллеливать и синхронизировать задачи в 

многопроцессорной среде и уметь обрабатывать файлы, размер которых превышает объем 

доступной оперативной памяти.

Код должен корректно обрабатывать все исключения, а при работе с потоками 

допускается использовать только стандартные классы и библиотеки из .Net 3.5 (исключая 

ThreadPool, BackgroundWorker).

Код программы должен следовать принципам ООП и ООД (читаемость, разбиение 

на классы и тд).

Алгоритм работы программы необходимо описать словами.

Исходники необходимо прислать вместе с проектом Visual Studio.

Дополнительным плюсом будет возможность корректной остановки программы по 

Ctrl-C.

timesheet
09-30 - 10-00 заготовка 
10-00 - 10-45 кодил FileMappingWrapper
10-45 - 11-00 мучался с nunit
11-00 - 12-00 кодил FileMappingWrapper
12-00 - 12-10 писал таймшит
12-10 - 12-36 кодил FileMappingViewAccessor 
12-45 - 15-07 кодил FileMappingViewAccessor.Read/Write (мучал Marshal)
15-07 - 15-43 создал тестовый файл, проверил работу FileMappingViewAccessor.Read/Write
15-43 - 16-41 читает блоками по гранулярити, создает архив .gz
16-41 - 17-43 разбил программу на Archivarius, SourceReader, DestinationWriter
17-43 - 18-43 мучался пытаясь понять почему ломается файл в архиве. (FAIL)

10-30 - 11-00 - добавил многопоточность.

10-00 - 12-30 переписал DestinationWriter для поддержки маппинга (ранее был stream).
